BACKUP ~10pp/backup~
AUTHOR ~lynx, CrevsDaak~
VERSION "10 player parties 0.5"

BEGIN ~Maximum party size extender for IEScript (usable with GemRB only)~

ACTION_IF (ENGINE_IS ~bg2 tob~ AND (NOT MOD_IS_INSTALLED ~setup-bg2fixpack.tp2~ ~0~))
THEN BEGIN
  FAIL ~For bg2, the G3 Fixpack is needed (Core fixes): www.gibberlings3.net/bg2fixpack/~
END

// some warnings and input
PRINT ~
This mod should be installed after all other script altering/adding mods!

The conversion process can easily take half an hour depending on the size of your install!
Please be patient and DO NOT INTERRUPT execution lest you want to start from zero.
There is only one query and then you can go plant some coffee.

What should the new maximum party size be? [1-10]~
ACTION_READLN ~newmax~
OUTER_WHILE NOT(IS_AN_INT %newmax% && %newmax% > 0 && %newmax% <= 10) BEGIN
  PRINT ~Enter a whole number between 1 and 10 silly.
What should the new maximum party size be? [1-10]~
  ACTION_READLN ~newmax~
END

// if it is <6 then they only have to change the variable in GemRB config
ACTION_IF (%newmax% < 7) THEN BEGIN
  PRINT ~Good news, smaller parties require only configuration changes!

Just set MaxPartySize to %newmax% in your GemRB config file and you'll be ready to play.
~
  FAIL ~Nothing to change, exiting...~
END

// extend object.ids with new scripting objects
// NOTE: gemrb supports only up to 10 objects (an arbitrary limit until someone shows a need for more)
APPEND ~object.ids~ ~90 Player7
91 Player8
92 Player9
93 Player10
94 Player7Fill
95 Player8Fill
96 Player9Fill
97 Player10Fill~
//APPEND ~object.ids~ ~91 Player8~
//APPEND ~object.ids~ ~92 Player9~
//APPEND ~object.ids~ ~93 Player10~
//APPEND ~object.ids~ ~94 Player7Fill~
//APPEND ~object.ids~ ~95 Player8Fill~
//APPEND ~object.ids~ ~96 Player9Fill~
//APPEND ~object.ids~ ~97 Player10Fill~

// decompile all to-be affected scripts
MKDIR ~10pp/temp~
MKDIR ~10pp/temp/baf~
MKDIR ~10pp/temp/d~

<<<<<<<< 10pp.inlined.null
>>>>>>>>

PRINT ~Fixing scripts...~

COPY_EXISTING_REGEXP GLOB ~^.*\.bcs$~ override
  COUNT_REGEXP_INSTANCES ~ 26 .*"OB~ has_player_6
  PATCH_IF has_player_6 BEGIN
    DECOMPILE_AND_PATCH BEGIN
      SET uncompiled_size = BUFFER_LENGTH - SOURCE_SIZE
      READ_ASCII 0 file_cont (uncompiled_size) // FIXME: go back to other method or make this stop error'ing.
      INNER_ACTION BEGIN
        COPY 10pp.inlined.null ~10pp/tmp/%SOURCE_RES%.baf2~
          INSERT_BYTES 0 uncompiled_size
          WRITE_ASCIIE 0 ~%file_cont%~ (uncompiled_size)

        AT_NOW ~perl wrapper.pl "%SOURCE_RES%.baf2" %newmax% "%SOURCE_RES%.baf"~
      END
      READ_ASCII 0 file_cont (1) // clear the variable's value... sort of
    END
  END
BUT_ONLY

COMPILE ~10pp/temp/baf~ // this will create backup files... hope so at least...
/*
// fix all dialogs
PRINT ~Fixing dialogs...~
// TODO/FIXME: update .dlg files block as needed
COPY_EXISTING_REGEXP GLOB ~^.*\.dlg$~ override
  COUNT_REGEXP_INSTANCES ~Player6~ has_player_6
  PATCH_IF has_player_6 BEGIN
    DECOMPILE_AND_PATCH BEGIN
      READ_ASCII 0 file_cont (SOURCE_SIZE)
      INNER_ACTION BEGIN
        COPY 10pp.inlined.null ~10pp/tmp/%SOURCE_RES%.d2~
        WRITE_ASCIIE 0 ~%file_cont%~ (SOURCE_SIZE)
        AT_NOW ~perl wrapper.pl "%SOURCE_RES%.d2" %newmax% "%SOURCE_RES%.d"~
      END
      READ_ASCII 0 file_cont (1) // clear the variable's value... sort of
    END
  END
BUT_ONLY

COMPILE ~10pp/temp/d~ // this will create backup files... hope so at least...
*/
PRINT ~DONE!

REMEMBER to:
* use a big enough resolution (extra space for portraits)
* and to set MaxPartySize to %newmax% in your GemRB config file
~
